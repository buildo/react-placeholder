// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ReactPlaceholder renders a custom placeholder when the content is not ready 1`] = `
[
  <div
    className=""
  >
    Custom Placeholder
  </div>,
]
`;

exports[`ReactPlaceholder renders content when firstLaunchOnly is true and ready changes to true, and keeps it rendered when ready changes to false 1`] = `
<div
  class="rect-shape"
  style="background-color: rgb(205, 205, 205); width: 100%; height: 100%; margin-right: 10px;"
/>
`;

exports[`ReactPlaceholder renders content when firstLaunchOnly is true and ready changes to true, and keeps it rendered when ready changes to false 2`] = `
<div>
  Some ready content
</div>
`;

exports[`ReactPlaceholder renders content when firstLaunchOnly is true and ready changes to true, and keeps it rendered when ready changes to false 3`] = `
<div>
  Some ready content
</div>
`;

exports[`ReactPlaceholder renders content when it's ready, then a placeholder when it's not ready, and finally content again when it's ready 1`] = `
<div>
  Some ready content
</div>
`;

exports[`ReactPlaceholder renders content when it's ready, then a placeholder when it's not ready, and finally content again when it's ready 2`] = `
<div
  class="text-block"
  style="width: 100%;"
>
  <div
    class="text-row"
    style="max-height: 33.333333333333336%; width: 97%; height: 1em; background-color: rgb(205, 205, 205); margin-top: 0px;"
  />
  <div
    class="text-row"
    style="max-height: 33.333333333333336%; width: 100%; height: 1em; background-color: rgb(205, 205, 205); margin-top: 0.7em;"
  />
</div>
`;

exports[`ReactPlaceholder renders content when it's ready, then a placeholder when it's not ready, and finally content again when it's ready 3`] = `
<div>
  Some ready content
</div>
`;

exports[`ReactPlaceholder renders the content when it's ready 1`] = `
[
  <div>
    Some ready content
  </div>,
]
`;

exports[`ReactPlaceholder renders the media placeholder when the content is not ready 1`] = `
[
  <MediaBlock
    color="#CDCDCD"
    rows={2}
  />,
]
`;

exports[`ReactPlaceholder renders the placeholder only after the specified delay 1`] = `
<div
  class="text-block"
  style="width: 100%;"
>
  <div
    class="text-row"
    style="max-height: 33.333333333333336%; width: 97%; height: 1em; background-color: rgb(205, 205, 205); margin-top: 0px;"
  />
  <div
    class="text-row"
    style="max-height: 33.333333333333336%; width: 100%; height: 1em; background-color: rgb(205, 205, 205); margin-top: 0.7em;"
  />
</div>
`;

exports[`ReactPlaceholder renders the rect placeholder when the content is not ready 1`] = `
[
  <RectShape
    color="#CDCDCD"
    rows={3}
  />,
]
`;

exports[`ReactPlaceholder renders the round placeholder when the content is not ready 1`] = `
[
  <RoundShape
    color="#CDCDCD"
    rows={3}
  />,
]
`;

exports[`ReactPlaceholder renders the round placeholder with animation when the content is not ready 1`] = `
[
  <RoundShape
    className="show-loading-animation"
    color="#CDCDCD"
    rows={3}
  />,
]
`;

exports[`ReactPlaceholder renders the text placeholder when the content is not ready 1`] = `
[
  <TextBlock
    color="#CDCDCD"
    rows={2}
  />,
]
`;

exports[`ReactPlaceholder renders the text placeholder with 3 rows as the default placeholder 1`] = `
[
  <TextBlock
    color="#CDCDCD"
    rows={3}
  />,
]
`;

exports[`ReactPlaceholder renders the text placeholder with the lineSpacing set 1`] = `
[
  <TextBlock
    color="#CDCDCD"
    lineSpacing={3}
    rows={2}
  />,
]
`;

exports[`ReactPlaceholder renders the textRow placeholder when the content is not ready 1`] = `
[
  <TextRow
    color="#CDCDCD"
    rows={3}
  />,
]
`;

exports[`build build script generates every needed file 1`] = `
[
  "ReactPlaceholder.d.ts",
  "ReactPlaceholder.js",
  "index.d.ts",
  "index.js",
  "placeholders/MediaBlock.d.ts",
  "placeholders/MediaBlock.js",
  "placeholders/RectShape.d.ts",
  "placeholders/RectShape.js",
  "placeholders/RoundShape.d.ts",
  "placeholders/RoundShape.js",
  "placeholders/TextBlock.d.ts",
  "placeholders/TextBlock.js",
  "placeholders/TextRow.d.ts",
  "placeholders/TextRow.js",
  "placeholders/index.d.ts",
  "placeholders/index.js",
  "reactPlaceholder.css",
  "reactPlaceholder.css.map",
  "utils.d.ts",
  "utils.js",
]
`;
